//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]

namespace TradeRobotics.Model
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class MarketContainer : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new MarketContainer object using the connection string found in the 'MarketContainer' section of the application configuration file.
        /// </summary>
        public MarketContainer() : base("name=MarketContainer", "MarketContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new MarketContainer object.
        /// </summary>
        public MarketContainer(string connectionString) : base(connectionString, "MarketContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new MarketContainer object.
        /// </summary>
        public MarketContainer(EntityConnection connection) : base(connection, "MarketContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Bar> AllBars
        {
            get
            {
                if ((_AllBars == null))
                {
                    _AllBars = base.CreateObjectSet<Bar>("AllBars");
                }
                return _AllBars;
            }
        }
        private ObjectSet<Bar> _AllBars;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Quote> Quotes
        {
            get
            {
                if ((_Quotes == null))
                {
                    _Quotes = base.CreateObjectSet<Quote>("Quotes");
                }
                return _Quotes;
            }
        }
        private ObjectSet<Quote> _Quotes;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AllBars EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAllBars(Bar bar)
        {
            base.AddObject("AllBars", bar);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Quotes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToQuotes(Quote quote)
        {
            base.AddObject("Quotes", quote);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Market", Name="Bar")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Bar : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Bar object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="open">Initial value of the Open property.</param>
        /// <param name="low">Initial value of the Low property.</param>
        /// <param name="high">Initial value of the High property.</param>
        /// <param name="close">Initial value of the Close property.</param>
        /// <param name="volume">Initial value of the Volume property.</param>
        /// <param name="time">Initial value of the Time property.</param>
        /// <param name="period">Initial value of the Period property.</param>
        /// <param name="symbol">Initial value of the Symbol property.</param>
        public static Bar CreateBar(global::System.Guid id, global::System.Double open, global::System.Double low, global::System.Double high, global::System.Double close, global::System.Int32 volume, global::System.DateTime time, global::System.Int32 period, global::System.String symbol)
        {
            Bar bar = new Bar();
            bar.Id = id;
            bar.Open = open;
            bar.Low = low;
            bar.High = high;
            bar.Close = close;
            bar.Volume = volume;
            bar.Time = time;
            bar.Period = period;
            bar.Symbol = symbol;
            return bar;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Open
        {
            get
            {
                return _Open;
            }
            set
            {
                OnOpenChanging(value);
                ReportPropertyChanging("Open");
                _Open = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Open");
                OnOpenChanged();
            }
        }
        private global::System.Double _Open;
        partial void OnOpenChanging(global::System.Double value);
        partial void OnOpenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Low
        {
            get
            {
                return _Low;
            }
            set
            {
                OnLowChanging(value);
                ReportPropertyChanging("Low");
                _Low = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Low");
                OnLowChanged();
            }
        }
        private global::System.Double _Low;
        partial void OnLowChanging(global::System.Double value);
        partial void OnLowChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double High
        {
            get
            {
                return _High;
            }
            set
            {
                OnHighChanging(value);
                ReportPropertyChanging("High");
                _High = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("High");
                OnHighChanged();
            }
        }
        private global::System.Double _High;
        partial void OnHighChanging(global::System.Double value);
        partial void OnHighChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Close
        {
            get
            {
                return _Close;
            }
            set
            {
                OnCloseChanging(value);
                ReportPropertyChanging("Close");
                _Close = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Close");
                OnCloseChanged();
            }
        }
        private global::System.Double _Close;
        partial void OnCloseChanging(global::System.Double value);
        partial void OnCloseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Volume
        {
            get
            {
                return _Volume;
            }
            set
            {
                OnVolumeChanging(value);
                ReportPropertyChanging("Volume");
                _Volume = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Volume");
                OnVolumeChanged();
            }
        }
        private global::System.Int32 _Volume;
        partial void OnVolumeChanging(global::System.Int32 value);
        partial void OnVolumeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Time
        {
            get
            {
                return _Time;
            }
            set
            {
                OnTimeChanging(value);
                ReportPropertyChanging("Time");
                _Time = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Time");
                OnTimeChanged();
            }
        }
        private global::System.DateTime _Time;
        partial void OnTimeChanging(global::System.DateTime value);
        partial void OnTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Period
        {
            get
            {
                return _Period;
            }
            set
            {
                OnPeriodChanging(value);
                ReportPropertyChanging("Period");
                _Period = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Period");
                OnPeriodChanged();
            }
        }
        private global::System.Int32 _Period;
        partial void OnPeriodChanging(global::System.Int32 value);
        partial void OnPeriodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Symbol
        {
            get
            {
                return _Symbol;
            }
            set
            {
                OnSymbolChanging(value);
                ReportPropertyChanging("Symbol");
                _Symbol = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Symbol");
                OnSymbolChanged();
            }
        }
        private global::System.String _Symbol;
        partial void OnSymbolChanging(global::System.String value);
        partial void OnSymbolChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Market", Name="Quote")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Quote : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Quote object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="time">Initial value of the Time property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        /// <param name="volume">Initial value of the Volume property.</param>
        public static Quote CreateQuote(global::System.Guid id, global::System.DateTime time, global::System.Double price, global::System.Double volume)
        {
            Quote quote = new Quote();
            quote.Id = id;
            quote.Time = time;
            quote.Price = price;
            quote.Volume = volume;
            return quote;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Time
        {
            get
            {
                return _Time;
            }
            set
            {
                OnTimeChanging(value);
                ReportPropertyChanging("Time");
                _Time = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Time");
                OnTimeChanged();
            }
        }
        private global::System.DateTime _Time;
        partial void OnTimeChanging(global::System.DateTime value);
        partial void OnTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.Double _Price;
        partial void OnPriceChanging(global::System.Double value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Volume
        {
            get
            {
                return _Volume;
            }
            set
            {
                OnVolumeChanging(value);
                ReportPropertyChanging("Volume");
                _Volume = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Volume");
                OnVolumeChanged();
            }
        }
        private global::System.Double _Volume;
        partial void OnVolumeChanging(global::System.Double value);
        partial void OnVolumeChanged();

        #endregion
    
    }

    #endregion
    
}
